{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerIdChangeTime","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleClick","handleContextMenu","event","preventDefault","document","addEventListener","removeEventListener","today","dateISO","toISOString","dateLocaleString","toLocaleDateString","year","month","day","Card","centered","Image","src","wrapped","ui","Content","Header","Meta","Description","extra","Icon","name","dateTime","ReactDOM","render","getElementById"],"mappings":"oPAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,kBAAoB,EALtB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,kBAAoBE,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAlBzE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,qBAvB9B,oBA0BE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAEhC,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YArC1C,GAA2BO,aCG3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVX,UAAW,WAHf,EAMEY,QAAU,EANZ,EA0BEC,YAAc,WACZ,EAAKnB,SAAS,CACZiB,UAAU,KA5BhB,EAgCEG,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKtB,SAAS,CACZiB,UAAU,KAnChB,uDAQE,WAAqB,IAAD,OAClBpB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZM,UAAWM,QAEZ,MAEHW,SAASC,iBAAiB,QAAS3B,KAAKsB,aACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,qBAhBlD,kCAmBE,WACEtB,OAAOW,cAAcZ,KAAKqB,SAE1BK,SAASE,oBAAoB,QAAS5B,KAAKsB,aAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,qBAvBrD,oBAuCE,WACE,MAAgCvB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UACZoB,EAAQ,IAAI/B,KACZgC,EAAUD,EAAME,cAAcxB,MAAM,EAAG,IACvCyB,EAAmBH,EAAMI,mBAAmB,QAAS,CACzDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGP,OACE,qBAAKvB,UAAU,YAAf,SACE,eAACwB,EAAA,EAAD,CAAMC,UAAQ,EAACzB,UAAU,MAAzB,UACE,cAAC0B,EAAA,EAAD,CACEC,IAAI,0DACJC,SAAO,EACPC,IAAI,IAEN,eAACL,EAAA,EAAKM,QAAN,WACE,cAACN,EAAA,EAAKO,OAAN,0BACA,cAACP,EAAA,EAAKQ,KAAN,UACE,sBAAMhC,UAAU,OAAhB,2BAEF,cAACwB,EAAA,EAAKS,YAAN,UACG1B,GAAY,cAAC,EAAD,CAAOX,UAAWA,SAGnC,eAAC4B,EAAA,EAAKM,QAAN,CAAcI,OAAK,EAAnB,UACE,cAACC,EAAA,EAAD,CAAMC,KAAK,UACX,sBAAMC,SAAUpB,EAAS,UAAQ,OAAjC,SACGE,gBArEf,GAAyBlB,aChBzBqC,IAASC,OACP,cAAC,EAAD,IACA1B,SAAS2B,eAAe,W","file":"static/js/main.bf9ea153.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerIdChangeTime = 0;\n\n  componentDidMount() {\n    this.timerIdChangeTime = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdChangeTime);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  handleClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault(); // not to show the context menu\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n    const today = new Date();\n    const dateISO = today.toISOString().slice(0, 10);\n    const dateLocaleString = today.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n\n    return (\n      <div className=\"container\">\n        <Card centered className=\"App\">\n          <Image\n            src=\"https://cdn-icons-png.flaticon.com/512/4305/4305432.png\"\n            wrapped\n            ui={false}\n          />\n          <Card.Content>\n            <Card.Header>React clock</Card.Header>\n            <Card.Meta>\n              <span className=\"date\">react clock</span>\n            </Card.Meta>\n            <Card.Description>\n              {hasClock && <Clock clockName={clockName} />}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name=\"clock\" />\n            <time dateTime={dateISO} data-cy=\"date\">\n              {dateLocaleString}\n            </time>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}